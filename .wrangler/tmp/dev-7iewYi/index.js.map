{
  "version": 3,
  "sources": ["../bundle-O6Q51I/checked-fetch.js", "../../../node_modules/devalue/src/utils.js", "../../../node_modules/devalue/src/constants.js", "../../../node_modules/devalue/src/parse.js", "../../../node_modules/devalue/src/stringify.js", "../../../node_modules/cfw-bindings-wrangler-bridge/worker/kv/index.js", "../../../node_modules/cfw-bindings-wrangler-bridge/worker/service/index.js", "../../../node_modules/cfw-bindings-wrangler-bridge/worker/r2/shared.js", "../../../node_modules/cfw-bindings-wrangler-bridge/worker/r2/index.js", "../../../node_modules/cfw-bindings-wrangler-bridge/worker/d1/index.js", "../../../node_modules/cfw-bindings-wrangler-bridge/worker/queue/index.js", "../../../node_modules/cfw-bindings-wrangler-bridge/worker/vectorize/index.js", "../../../node_modules/cfw-bindings-wrangler-bridge/worker/_internals/index.js", "../../../node_modules/cfw-bindings-wrangler-bridge/worker/index.js"],
  "sourceRoot": "/Users/jahir9991/works/lazzlek/cf-ecommerce/.wrangler/tmp/dev-7iewYi",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t  );\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "/** @type {Record<string, string>} */\nexport const escaped = {\n\t'<': '\\\\u003C',\n\t'\\\\': '\\\\\\\\',\n\t'\\b': '\\\\b',\n\t'\\f': '\\\\f',\n\t'\\n': '\\\\n',\n\t'\\r': '\\\\r',\n\t'\\t': '\\\\t',\n\t'\\u2028': '\\\\u2028',\n\t'\\u2029': '\\\\u2029'\n};\n\nexport class DevalueError extends Error {\n\t/**\n\t * @param {string} message\n\t * @param {string[]} keys\n\t */\n\tconstructor(message, keys) {\n\t\tsuper(message);\n\t\tthis.name = 'DevalueError';\n\t\tthis.path = keys.join('');\n\t}\n}\n\n/** @param {any} thing */\nexport function is_primitive(thing) {\n\treturn Object(thing) !== thing;\n}\n\nconst object_proto_names = /* @__PURE__ */ Object.getOwnPropertyNames(\n\tObject.prototype\n)\n\t.sort()\n\t.join('\\0');\n\n/** @param {any} thing */\nexport function is_plain_object(thing) {\n\tconst proto = Object.getPrototypeOf(thing);\n\n\treturn (\n\t\tproto === Object.prototype ||\n\t\tproto === null ||\n\t\tObject.getOwnPropertyNames(proto).sort().join('\\0') === object_proto_names\n\t);\n}\n\n/** @param {any} thing */\nexport function get_type(thing) {\n\treturn Object.prototype.toString.call(thing).slice(8, -1);\n}\n\n/** @param {string} char */\nfunction get_escaped_char(char) {\n\tswitch (char) {\n\t\tcase '\"':\n\t\t\treturn '\\\\\"';\n\t\tcase '<':\n\t\t\treturn '\\\\u003C';\n\t\tcase '\\\\':\n\t\t\treturn '\\\\\\\\';\n\t\tcase '\\n':\n\t\t\treturn '\\\\n';\n\t\tcase '\\r':\n\t\t\treturn '\\\\r';\n\t\tcase '\\t':\n\t\t\treturn '\\\\t';\n\t\tcase '\\b':\n\t\t\treturn '\\\\b';\n\t\tcase '\\f':\n\t\t\treturn '\\\\f';\n\t\tcase '\\u2028':\n\t\t\treturn '\\\\u2028';\n\t\tcase '\\u2029':\n\t\t\treturn '\\\\u2029';\n\t\tdefault:\n\t\t\treturn char < ' '\n\t\t\t\t? `\\\\u${char.charCodeAt(0).toString(16).padStart(4, '0')}`\n\t\t\t\t: '';\n\t}\n}\n\n/** @param {string} str */\nexport function stringify_string(str) {\n\tlet result = '';\n\tlet last_pos = 0;\n\tconst len = str.length;\n\n\tfor (let i = 0; i < len; i += 1) {\n\t\tconst char = str[i];\n\t\tconst replacement = get_escaped_char(char);\n\t\tif (replacement) {\n\t\t\tresult += str.slice(last_pos, i) + replacement;\n\t\t\tlast_pos = i + 1;\n\t\t}\n\t}\n\n\treturn `\"${last_pos === 0 ? str : result + str.slice(last_pos)}\"`;\n}\n", "export const UNDEFINED = -1;\nexport const HOLE = -2;\nexport const NAN = -3;\nexport const POSITIVE_INFINITY = -4;\nexport const NEGATIVE_INFINITY = -5;\nexport const NEGATIVE_ZERO = -6;\n", "import {\n\tHOLE,\n\tNAN,\n\tNEGATIVE_INFINITY,\n\tNEGATIVE_ZERO,\n\tPOSITIVE_INFINITY,\n\tUNDEFINED\n} from './constants.js';\n\n/**\n * Revive a value serialized with `devalue.stringify`\n * @param {string} serialized\n * @param {Record<string, (value: any) => any>} [revivers]\n */\nexport function parse(serialized, revivers) {\n\treturn unflatten(JSON.parse(serialized), revivers);\n}\n\n/**\n * Revive a value flattened with `devalue.stringify`\n * @param {number | any[]} parsed\n * @param {Record<string, (value: any) => any>} [revivers]\n */\nexport function unflatten(parsed, revivers) {\n\tif (typeof parsed === 'number') return hydrate(parsed, true);\n\n\tif (!Array.isArray(parsed) || parsed.length === 0) {\n\t\tthrow new Error('Invalid input');\n\t}\n\n\tconst values = /** @type {any[]} */ (parsed);\n\n\tconst hydrated = Array(values.length);\n\n\t/**\n\t * @param {number} index\n\t * @returns {any}\n\t */\n\tfunction hydrate(index, standalone = false) {\n\t\tif (index === UNDEFINED) return undefined;\n\t\tif (index === NAN) return NaN;\n\t\tif (index === POSITIVE_INFINITY) return Infinity;\n\t\tif (index === NEGATIVE_INFINITY) return -Infinity;\n\t\tif (index === NEGATIVE_ZERO) return -0;\n\n\t\tif (standalone) throw new Error(`Invalid input`);\n\n\t\tif (index in hydrated) return hydrated[index];\n\n\t\tconst value = values[index];\n\n\t\tif (!value || typeof value !== 'object') {\n\t\t\thydrated[index] = value;\n\t\t} else if (Array.isArray(value)) {\n\t\t\tif (typeof value[0] === 'string') {\n\t\t\t\tconst type = value[0];\n\n\t\t\t\tconst reviver = revivers?.[type];\n\t\t\t\tif (reviver) {\n\t\t\t\t\treturn (hydrated[index] = reviver(hydrate(value[1])));\n\t\t\t\t}\n\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'Date':\n\t\t\t\t\t\thydrated[index] = new Date(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Set':\n\t\t\t\t\t\tconst set = new Set();\n\t\t\t\t\t\thydrated[index] = set;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 1) {\n\t\t\t\t\t\t\tset.add(hydrate(value[i]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Map':\n\t\t\t\t\t\tconst map = new Map();\n\t\t\t\t\t\thydrated[index] = map;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tmap.set(hydrate(value[i]), hydrate(value[i + 1]));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RegExp':\n\t\t\t\t\t\thydrated[index] = new RegExp(value[1], value[2]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\thydrated[index] = Object(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BigInt':\n\t\t\t\t\t\thydrated[index] = BigInt(value[1]);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'null':\n\t\t\t\t\t\tconst obj = Object.create(null);\n\t\t\t\t\t\thydrated[index] = obj;\n\t\t\t\t\t\tfor (let i = 1; i < value.length; i += 2) {\n\t\t\t\t\t\t\tobj[value[i]] = hydrate(value[i + 1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(`Unknown type ${type}`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = new Array(value.length);\n\t\t\t\thydrated[index] = array;\n\n\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\tconst n = value[i];\n\t\t\t\t\tif (n === HOLE) continue;\n\n\t\t\t\t\tarray[i] = hydrate(n);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t/** @type {Record<string, any>} */\n\t\t\tconst object = {};\n\t\t\thydrated[index] = object;\n\n\t\t\tfor (const key in value) {\n\t\t\t\tconst n = value[key];\n\t\t\t\tobject[key] = hydrate(n);\n\t\t\t}\n\t\t}\n\n\t\treturn hydrated[index];\n\t}\n\n\treturn hydrate(0);\n}\n", "import {\n\tDevalueError,\n\tget_type,\n\tis_plain_object,\n\tis_primitive,\n\tstringify_string\n} from './utils.js';\nimport {\n\tHOLE,\n\tNAN,\n\tNEGATIVE_INFINITY,\n\tNEGATIVE_ZERO,\n\tPOSITIVE_INFINITY,\n\tUNDEFINED\n} from './constants.js';\n\n/**\n * Turn a value into a JSON string that can be parsed with `devalue.parse`\n * @param {any} value\n * @param {Record<string, (value: any) => any>} [reducers]\n */\nexport function stringify(value, reducers) {\n\t/** @type {any[]} */\n\tconst stringified = [];\n\n\t/** @type {Map<any, number>} */\n\tconst indexes = new Map();\n\n\t/** @type {Array<{ key: string, fn: (value: any) => any }>} */\n\tconst custom = [];\n\tfor (const key in reducers) {\n\t\tcustom.push({ key, fn: reducers[key] });\n\t}\n\n\t/** @type {string[]} */\n\tconst keys = [];\n\n\tlet p = 0;\n\n\t/** @param {any} thing */\n\tfunction flatten(thing) {\n\t\tif (typeof thing === 'function') {\n\t\t\tthrow new DevalueError(`Cannot stringify a function`, keys);\n\t\t}\n\n\t\tif (indexes.has(thing)) return indexes.get(thing);\n\n\t\tif (thing === undefined) return UNDEFINED;\n\t\tif (Number.isNaN(thing)) return NAN;\n\t\tif (thing === Infinity) return POSITIVE_INFINITY;\n\t\tif (thing === -Infinity) return NEGATIVE_INFINITY;\n\t\tif (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO;\n\n\t\tconst index = p++;\n\t\tindexes.set(thing, index);\n\n\t\tfor (const { key, fn } of custom) {\n\t\t\tconst value = fn(thing);\n\t\t\tif (value) {\n\t\t\t\tstringified[index] = `[\"${key}\",${flatten(value)}]`;\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\n\t\tlet str = '';\n\n\t\tif (is_primitive(thing)) {\n\t\t\tstr = stringify_primitive(thing);\n\t\t} else {\n\t\t\tconst type = get_type(thing);\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Number':\n\t\t\t\tcase 'String':\n\t\t\t\tcase 'Boolean':\n\t\t\t\t\tstr = `[\"Object\",${stringify_primitive(thing)}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'BigInt':\n\t\t\t\t\tstr = `[\"BigInt\",${thing}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Date':\n\t\t\t\t\tstr = `[\"Date\",\"${thing.toISOString()}\"]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RegExp':\n\t\t\t\t\tconst { source, flags } = thing;\n\t\t\t\t\tstr = flags\n\t\t\t\t\t\t? `[\"RegExp\",${stringify_string(source)},\"${flags}\"]`\n\t\t\t\t\t\t: `[\"RegExp\",${stringify_string(source)}]`;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tstr = '[';\n\n\t\t\t\t\tfor (let i = 0; i < thing.length; i += 1) {\n\t\t\t\t\t\tif (i > 0) str += ',';\n\n\t\t\t\t\t\tif (i in thing) {\n\t\t\t\t\t\t\tkeys.push(`[${i}]`);\n\t\t\t\t\t\t\tstr += flatten(thing[i]);\n\t\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstr += HOLE;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Set':\n\t\t\t\t\tstr = '[\"Set\"';\n\n\t\t\t\t\tfor (const value of thing) {\n\t\t\t\t\t\tstr += `,${flatten(value)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Map':\n\t\t\t\t\tstr = '[\"Map\"';\n\n\t\t\t\t\tfor (const [key, value] of thing) {\n\t\t\t\t\t\tkeys.push(\n\t\t\t\t\t\t\t`.get(${is_primitive(key) ? stringify_primitive(key) : '...'})`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tstr += `,${flatten(key)},${flatten(value)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tstr += ']';\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tif (!is_plain_object(thing)) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify arbitrary non-POJOs`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Object.getOwnPropertySymbols(thing).length > 0) {\n\t\t\t\t\t\tthrow new DevalueError(\n\t\t\t\t\t\t\t`Cannot stringify POJOs with symbolic keys`,\n\t\t\t\t\t\t\tkeys\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Object.getPrototypeOf(thing) === null) {\n\t\t\t\t\t\tstr = '[\"null\"';\n\t\t\t\t\t\tfor (const key in thing) {\n\t\t\t\t\t\t\tkeys.push(`.${key}`);\n\t\t\t\t\t\t\tstr += `,${stringify_string(key)},${flatten(thing[key])}`;\n\t\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += ']';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr = '{';\n\t\t\t\t\t\tlet started = false;\n\t\t\t\t\t\tfor (const key in thing) {\n\t\t\t\t\t\t\tif (started) str += ',';\n\t\t\t\t\t\t\tstarted = true;\n\t\t\t\t\t\t\tkeys.push(`.${key}`);\n\t\t\t\t\t\t\tstr += `${stringify_string(key)}:${flatten(thing[key])}`;\n\t\t\t\t\t\t\tkeys.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += '}';\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstringified[index] = str;\n\t\treturn index;\n\t}\n\n\tconst index = flatten(value);\n\n\t// special case \u2014\u00A0value is represented as a negative index\n\tif (index < 0) return `${index}`;\n\n\treturn `[${stringified.join(',')}]`;\n}\n\n/**\n * @param {any} thing\n * @returns {string}\n */\nfunction stringify_primitive(thing) {\n\tconst type = typeof thing;\n\tif (type === 'string') return stringify_string(thing);\n\tif (thing instanceof String) return stringify_string(thing.toString());\n\tif (thing === void 0) return UNDEFINED.toString();\n\tif (thing === 0 && 1 / thing < 0) return NEGATIVE_ZERO.toString();\n\tif (type === 'bigint') return `[\"BigInt\",\"${thing}\"]`;\n\treturn String(thing);\n}\n", "// @ts-check\nimport { stringify, parse } from \"devalue\";\n\n/** @param {string} key */\nconst decodeKey = (key) => decodeURIComponent(key);\n\n/**\n * @param {any} binding\n * @returns {binding is KVNamespace}\n */\nexport const isKVBinding = (binding) =>\n  binding.constructor.name === \"KvNamespace\";\n\n/**\n * @param {KVNamespace} KV\n * @param {Request} req\n */\nexport const handleKVDispatch = async (KV, req) => {\n  const { operation, parameters } = parse(\n    req.headers.get(\"X-BRIDGE-KV-Dispatch\") ?? \"{}\",\n  );\n\n  if (operation === \"KVNamespace.list\") {\n    const [options] = parameters;\n\n    const result = await KV.list(options);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"KVNamespace.put\") {\n    const [encodedKey, options] = parameters;\n    const key = decodeKey(encodedKey);\n    const value = req.body ?? \"Only for TS, never happens\";\n\n    // Need to await here, otherwise already sent error\n    await KV.put(key, value, options);\n\n    return new Response();\n  }\n\n  if (operation === \"KVNamespace.getWithMetadata\") {\n    const [encodedKey, typeOrOptions] = parameters;\n    const key = decodeKey(encodedKey);\n\n    const { value, metadata, cacheStatus } = await KV.getWithMetadata(key, {\n      ...(typeof typeOrOptions !== \"string\" ? typeOrOptions : {}),\n      // Override it to respond over our bridge.\n      // `stream` is fastest and type conversion is done by bridge module.\n      type: \"stream\",\n    });\n\n    return new Response(value, {\n      headers: {\n        \"X-BRIDGE-KV-ValueIsNull\": `${value === null}`,\n        \"X-BRIDGE-KV-Metadata\": stringify(metadata),\n        \"X-BRIDGE-KV-CacheStatus\": stringify(cacheStatus),\n      },\n    });\n  }\n\n  if (operation === \"KVNamespace.delete\") {\n    const [encodedKey] = parameters;\n    const key = decodeKey(encodedKey);\n\n    await KV.delete(key);\n\n    return new Response();\n  }\n\n  throw new Error(`${operation}() is not supported.`);\n};\n", "// @ts-check\n\n/**\n * @param {any} binding\n * @returns {binding is Fetcher}\n */\nexport const isServiceBinding = (binding) =>\n  // This is true in remote but `Object` in local :(\n  binding.constructor.name === \"Fetcher\" || typeof binding.fetch === \"function\";\n\n/**\n * @param {Fetcher} SERVICE\n * @param {Request} req\n */\nexport const handleServiceDispatch = async (SERVICE, req) => {\n  const { operation, parameters } = JSON.parse(\n    req.headers.get(\"X-BRIDGE-SERVICE-Dispatch\") ?? \"{}\",\n  );\n\n  if (operation === \"Fetcher.fetch\") {\n    const [originalUrl] = parameters;\n\n    // Route to original service(worker)\n    const originalReq = new Request(originalUrl, req);\n\n    // Clean up our header\n    originalReq.headers.delete(\"X-BRIDGE-BINDING-MODULE\");\n    originalReq.headers.delete(\"X-BRIDGE-BINDING-NAME\");\n    originalReq.headers.delete(\"X-BRIDGE-SERVICE-Dispatch\");\n\n    return SERVICE.fetch(originalReq);\n  }\n\n  throw new Error(`${operation}() is not supported.`);\n};\n", "/** @param {string} hexString */\nexport const hexStringToArrayBuffer = (hexString) => {\n  const view = new Uint8Array(hexString.length / 2);\n\n  for (let i = 0; i < hexString.length; i += 2)\n    view[i / 2] = parseInt(hexString.substring(i, i + 2), 16);\n\n  return view.buffer;\n};\n\n/** @param {string} key */\nexport const decodeKey = (key) => decodeURIComponent(key);\n", "// @ts-check\nimport { parse } from \"devalue\";\nimport { hexStringToArrayBuffer, decodeKey } from \"./shared.js\";\n\n/**\n * @param {any} binding\n * @returns {binding is R2Bucket}\n */\nexport const isR2Binding = (binding) => binding.constructor.name === \"R2Bucket\";\n\n/**\n * @param {R2Bucket} R2\n * @param {Request} req\n */\nexport const handleR2Dispatch = async (R2, req) => {\n  const { operation, parameters } = parse(\n    req.headers.get(\"X-BRIDGE-R2-Dispatch\") ?? \"{}\",\n    {\n      // Date: Handled by default\n      Headers: (v) => new Headers(v),\n      ArrayBuffer: (v) => hexStringToArrayBuffer(v),\n    },\n  );\n\n  if (operation === \"R2Bucket.list\") {\n    const [options] = parameters;\n\n    const result = await R2.list(options);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"R2Bucket.put\") {\n    const [encodedKey, , options] = parameters;\n    const key = decodeKey(encodedKey);\n    const value = req.body;\n\n    const result = await R2.put(key, value, options);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"R2Bucket.get\") {\n    const [encodedKey, options] = parameters;\n    const key = decodeKey(encodedKey);\n\n    const result = await R2.get(key, options);\n\n    // `null`: key does not exists\n    if (result === null) return Response.json(null);\n\n    // `R2ObjectBody`: key exists and precondition is met\n    if (\"body\" in result && result.constructor.name === \"GetResult\")\n      return new Response(result.body, {\n        headers: { \"X-BRIDGE-R2-R2ObjectJSON\": JSON.stringify(result) },\n      });\n\n    // `R2Object`: key exists but precondition is not met\n    return Response.json(result);\n  }\n\n  if (operation === \"R2Bucket.head\") {\n    const [encodedKey] = parameters;\n    const key = decodeKey(encodedKey);\n\n    const result = await R2.head(key);\n\n    // `null`: key does not exists\n    if (result === null) return Response.json(null);\n\n    // `R2Object`: key exists\n    return Response.json(result);\n  }\n\n  if (operation === \"R2Bucket.delete\") {\n    const [encodedKeys] = parameters;\n    const keys =\n      typeof encodedKeys === \"string\"\n        ? decodeKey(encodedKeys)\n        : encodedKeys.map(/** @param {string} key */ (key) => decodeKey(key));\n\n    await R2.delete(keys);\n\n    return new Response();\n  }\n\n  if (operation === \"R2Bucket.createMultipartUpload\") {\n    const [encodedKey, options] = parameters;\n    const key = decodeKey(encodedKey);\n\n    const result = await R2.createMultipartUpload(key, options);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"R2MultipartUpload.uploadPart\") {\n    const [encodedKey, uploadId, partNumber] = parameters;\n    const key = decodeKey(encodedKey);\n    const value = req.body ?? \"Only for TS, never happens\";\n\n    const multipartUpload = R2.resumeMultipartUpload(key, uploadId);\n    const result = await multipartUpload.uploadPart(partNumber, value);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"R2MultipartUpload.abort\") {\n    const [encodedKey, uploadId] = parameters;\n    const key = decodeKey(encodedKey);\n\n    const multipartUpload = R2.resumeMultipartUpload(key, uploadId);\n    await multipartUpload.abort();\n\n    return new Response();\n  }\n\n  if (operation === \"R2MultipartUpload.complete\") {\n    const [encodedKey, uploadId, uploadedParts] = parameters;\n    const key = decodeKey(encodedKey);\n\n    const multipartUpload = R2.resumeMultipartUpload(key, uploadId);\n    const result = await multipartUpload.complete(uploadedParts);\n\n    return Response.json(result);\n  }\n\n  throw new Error(`${operation}() is not supported.`);\n};\n", "// @ts-check\nimport { parse } from \"devalue\";\n\n/** @param {unknown[]} values */\nconst decodeBindValues = (values) =>\n  // In module side, `ArrayBuffer` and `ArrayBufferView` are encoded as `Array`.\n  // But here we do not decode them, because current D1 implementation also treats them as `Array`.\n  values;\n\n/**\n * @param {any} binding\n * @returns {binding is D1Database}\n */\nexport const isD1Binding = (binding) =>\n  binding.constructor.name === \"D1Database\";\n\n/**\n * @param {D1Database} D1\n * @param {Request} req\n */\nexport const handleD1Dispatch = async (D1, req) => {\n  const { operation, parameters } = await req.text().then((t) => parse(t));\n\n  if (operation === \"D1Database.dump\") {\n    const result = await D1.dump();\n\n    return new Response(result);\n  }\n\n  if (operation === \"D1Database.exec\") {\n    const [query] = parameters;\n    const result = await D1.exec(query);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"D1Database.batch\") {\n    const [statementArray] = parameters;\n    const result = await D1.batch(\n      statementArray.map(\n        /** @param {[string, unknown[]]} stmt */ ([statement, params]) =>\n          D1.prepare(statement).bind(...decodeBindValues(params)),\n      ),\n    );\n\n    return Response.json(result);\n  }\n\n  if (operation === \"D1PreparedStatement.first\") {\n    const [statement, params, column] = parameters;\n    const result = await D1.prepare(statement)\n      .bind(...decodeBindValues(params))\n      .first(column);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"D1PreparedStatement.all\") {\n    const [statement, params] = parameters;\n    const result = await D1.prepare(statement)\n      .bind(...decodeBindValues(params))\n      .all();\n\n    return Response.json(result);\n  }\n\n  if (operation === \"D1PreparedStatement.run\") {\n    const [statement, params] = parameters;\n    const result = await D1.prepare(statement)\n      .bind(...decodeBindValues(params))\n      .run();\n\n    return Response.json(result);\n  }\n\n  if (operation === \"D1PreparedStatement.raw\") {\n    const [statement, params] = parameters;\n    const result = await D1.prepare(statement)\n      .bind(...decodeBindValues(params))\n      .raw();\n\n    return Response.json(result);\n  }\n\n  throw new Error(`${operation}() is not supported.`);\n};\n", "// @ts-check\nimport { parse } from \"devalue\";\n\n/**\n * @param {any} binding\n * @returns {binding is Queue<Body>}\n */\nexport const isQueueBinding = (binding) =>\n  binding.constructor.name === \"WorkerQueue\";\n\n/**\n * @param {Queue<Body>} QUEUE\n * @param {Request} req\n */\nexport const handleQueueDispatch = async (QUEUE, req) => {\n  const { operation, parameters } = await req.text().then((t) => parse(t));\n\n  if (operation === \"Queue.send\") {\n    const [body, options] = parameters;\n    await QUEUE.send(body, options);\n\n    return new Response();\n  }\n\n  if (operation === \"Queue.sendBatch\") {\n    const [messages] = parameters;\n    await QUEUE.sendBatch(messages);\n\n    return new Response();\n  }\n\n  throw new Error(`${operation}() is not supported.`);\n};\n", "// @ts-check\nimport { parse } from \"devalue\";\n\n/**\n * @param {any} binding\n * @returns {binding is VectorizeIndex}\n */\nexport const isVectorizeBinding = (binding) =>\n  binding.constructor.name === \"VectorizeIndexImpl\";\n\n/**\n * @param {VectorizeIndex} VECTORIZE\n * @param {Request} req\n */\nexport const handleVectorizeDispatch = async (VECTORIZE, req) => {\n  const { operation, parameters } = await req.text().then((t) => parse(t));\n\n  if (operation === \"VectorizeIndex.describe\") {\n    const result = await VECTORIZE.describe();\n\n    return Response.json(result);\n  }\n\n  if (operation === \"VectorizeIndex.query\") {\n    const [vector, options] = parameters;\n    const result = await VECTORIZE.query(vector, options);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"VectorizeIndex.insert\") {\n    const [vectors] = parameters;\n    const result = await VECTORIZE.insert(vectors);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"VectorizeIndex.upsert\") {\n    const [vectors] = parameters;\n    const result = await VECTORIZE.upsert(vectors);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"VectorizeIndex.deleteByIds\") {\n    const [ids] = parameters;\n    const result = await VECTORIZE.deleteByIds(ids);\n\n    return Response.json(result);\n  }\n\n  if (operation === \"VectorizeIndex.getByIds\") {\n    const [ids] = parameters;\n    const result = await VECTORIZE.getByIds(ids);\n\n    return Response.json(result);\n  }\n\n  throw new Error(`${operation}() is not supported.`);\n};\n", "// @ts-check\nimport { isD1Binding } from \"../d1/index.js\";\nimport { isKVBinding } from \"../kv/index.js\";\nimport { isQueueBinding } from \"../queue/index.js\";\nimport { isR2Binding } from \"../r2/index.js\";\nimport { isServiceBinding } from \"../service/index.js\";\nimport { isVectorizeBinding } from \"../vectorize/index.js\";\n\n/** @param {Record<string, unknown>} env */\nexport const getBindings = (env) => {\n  /** @type {Record<string, string>} */\n  const bindings = {};\n\n  for (const [name, binding] of Object.entries(env)) {\n    if (isD1Binding(binding)) bindings[name] = \"d1\";\n    if (isKVBinding(binding)) bindings[name] = \"kv\";\n    if (isQueueBinding(binding)) bindings[name] = \"queue\";\n    if (isR2Binding(binding)) bindings[name] = \"r2\";\n    if (isServiceBinding(binding)) bindings[name] = \"service\";\n    if (isVectorizeBinding(binding)) bindings[name] = \"vectorize\";\n  }\n\n  return bindings;\n};\n", "// @ts-check\nimport { isKVBinding, handleKVDispatch } from \"./kv/index.js\";\nimport { isServiceBinding, handleServiceDispatch } from \"./service/index.js\";\nimport { isR2Binding, handleR2Dispatch } from \"./r2/index.js\";\nimport { isD1Binding, handleD1Dispatch } from \"./d1/index.js\";\nimport { isQueueBinding, handleQueueDispatch } from \"./queue/index.js\";\nimport {\n  isVectorizeBinding,\n  handleVectorizeDispatch,\n} from \"./vectorize/index.js\";\nimport { getBindings } from \"./_internals/index.js\";\n\n/** @type {ExportedHandlerFetchHandler<Record<string, any>>} */\nconst handleInternalsRequest = (req, env) => {\n  const INTERNALS_METHOD = req.headers.get(\"X-BRIDGE-INTERNALS\");\n\n  if (INTERNALS_METHOD === \"getBindings\")\n    return Response.json(getBindings(env));\n\n  return Response.json(`Not supported internals method: ${INTERNALS_METHOD}.`, {\n    status: 404,\n  });\n};\n\n/** @type {ExportedHandlerFetchHandler<Record<string, any>>} */\nconst handleBridgeRequest = (req, env) => {\n  // KV or R2 or ...\n  const BINDING_MODULE = req.headers.get(\"X-BRIDGE-BINDING-MODULE\");\n  // MY_KV or MY_R2 or ...\n  const BINDING_NAME = req.headers.get(\"X-BRIDGE-BINDING-NAME\");\n  if (!(BINDING_MODULE && BINDING_NAME))\n    return new Response(\n      \"Wrong usage of bridge worker. Required headers are not presented.\",\n      { status: 400 },\n    );\n\n  const BINDING = env[BINDING_NAME];\n  if (!BINDING)\n    return new Response(\n      `Failed to load env.${BINDING_NAME}. Check your wrangler.toml and reload.`,\n      { status: 400 },\n    );\n\n  // Let's handle dispatch from bridge module!\n  if (BINDING_MODULE === \"KV\" && isKVBinding(BINDING))\n    return handleKVDispatch(BINDING, req).catch(\n      (err) => new Response(err.message, { status: 500 }),\n    );\n\n  if (BINDING_MODULE === \"SERVICE\" && isServiceBinding(BINDING))\n    return handleServiceDispatch(BINDING, req).catch(\n      (err) => new Response(err.message, { status: 500 }),\n    );\n\n  if (BINDING_MODULE === \"R2\" && isR2Binding(BINDING))\n    return handleR2Dispatch(BINDING, req).catch(\n      (err) => new Response(err.message, { status: 500 }),\n    );\n\n  if (BINDING_MODULE === \"D1\" && isD1Binding(BINDING))\n    return handleD1Dispatch(BINDING, req).catch(\n      (err) => new Response(err.message, { status: 500 }),\n    );\n\n  if (BINDING_MODULE === \"QUEUE\" && isQueueBinding(BINDING))\n    return handleQueueDispatch(BINDING, req).catch(\n      (err) => new Response(err.message, { status: 500 }),\n    );\n\n  if (BINDING_MODULE === \"VECTORIZE\" && isVectorizeBinding(BINDING))\n    return handleVectorizeDispatch(BINDING, req).catch(\n      (err) => new Response(err.message, { status: 500 }),\n    );\n\n  return new Response(\n    `Not supported binding: ${BINDING_MODULE} or ${BINDING_NAME} is not compatible for ${BINDING_MODULE} binding.`,\n    { status: 404 },\n  );\n};\n\n/** @type {ExportedHandler<Record<string, any>>} */\nexport default {\n  async fetch(req, env, ctx) {\n    // CORS is needed if bridge module is running on browsers\n    if (req.method === \"OPTIONS\")\n      return new Response(null, {\n        status: 204,\n        headers: {\n          \"access-control-allow-origin\": \"*\",\n          \"access-control-allow-headers\": \"*\",\n          \"access-control-allow-methods\": \"*\",\n        },\n      });\n\n    let originalRes;\n    if (req.headers.has(\"X-BRIDGE-INTERNALS\")) {\n      originalRes = await handleInternalsRequest(req, env, ctx);\n    } else {\n      originalRes = await handleBridgeRequest(req, env, ctx);\n    }\n\n    // This is required to avoid `Can't modify immutable headers` error\n    const res = new Response(originalRes.body, originalRes);\n    res.headers.set(\"access-control-allow-origin\", \"*\");\n    return res;\n  },\n};\n"],
  "mappings": "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",
  "names": ["index", "value", "decodeKey", "decodeKey"]
}
